// triangle
@mixin triangle($direction, $size, $borderColor: $BORDERCOLOR ) {
    content:"";
    height: 0;
    width: 0;

    border-left:$size solid $borderColor;

    border-top:$size dashed transparent;

    border-bottom:$size dashed transparent;
    @else if $direction == bottom {
        border-top:$size solid $borderColor;
        border-left:$size dashed transparent;
        border-right:$size dashed transparent;
    }
    @else if $direction == left {
        border-right:$size solid $borderColor;
        border-top:$size dashed transparent;
        border-bottom:$size dashed transparent;
    }
}

// arrow
@mixin arrow($direction: top, $size: 5px, $borderColor: $BORDERCOLOR, $color: #fff, $width: 2px ) {
    height: 0;
    width: 0;
    @include border-radius(3px);

    border-left:$size solid $borderColor;

    border-top:$size dashed transparent;

    border-bottom:$size dashed transparent;
    @else if $direction == bottom {
        border-top:$size solid $borderColor;
        border-left:$size dashed transparent;
        border-right:$size dashed transparent;
        &:after{
            left:-$size;
            bottom:$width;
            border-top:$size solid $color;
            border-left:$size dashed transparent;
            border-right:$size dashed transparent;
        }
    }
    @else if $direction == left {
        border-right:$size solid $borderColor;
        border-top:$size dashed transparent;
        border-bottom:$size dashed transparent;
        &:after{
            left:$width;
            top:-$size;
            border-right:$size solid $color;
            border-top:$size dashed transparent;
            border-bottom:$size dashed transparent;
        }
    }
}

// arrow
@mixin arrow($direction: top, $size: 5px, $borderColor: $BORDERCOLOR, $color: #fff, $width: 2px ):after {
    position:absolute;
    content:'';
    width:0;
    height:0;
    @include border-radius(3px);
}

// arrow
@mixin arrow($direction: top, $size: 5px, $borderColor: $BORDERCOLOR, $color: #fff, $width: 2px ):after {
    right:$width;
    top:-$size;
    border-left:$size solid $color;
    border-top:$size dashed transparent;
    border-bottom:$size dashed transparent;
}

// line overflow
@mixin line-overflow($line) {
    white-space: normal;
    overflow:hidden;
    text-overflow:ellipsis;
    display:-webkit-box;
    -webkit-line-clamp:$line; /* number of lines to show */
    -webkit-box-orient:vertical;
}

// font face
@mixin font-face($fontFamily, $fileName, $style: normal, $weight: normal){
    @font-face{
        font-family:$fontFamily;
        font-style:$style;
        font-weight:$weight;
        src:url('../font/#{$fileName}.eot');
        src:local('#{$fontFamily}'), url('../font/#{$fileName}.eot?#iefix') format('embedded-opentype'), url('../font/#{$fileName}.woff') format('woff'), url('../font/#{$fileName}.ttf') format('truetype'), url('../font/#{$fileName}.svg##{$fontFamily}') format('svg'), url('../font/#{$fileName}.otf') format('opentype');
    }
}

// drop shadow
@mixin drop-shadow($horizontal: 0, $vertical: 1px, $blur: 2px, $alpha: 0.1) {
    box-shadow:$horizontal $vertical  $blur rgba(0, 0, 0, $alpha);
}

// opacity
@mixin opacity($opacity){
    opacity:$opacity;
    filter:alpha(opacity=$opacity * 100);
    -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(opacity=#{$opacity * 100})";
}

// transition
@mixin trans($trans...){
    -webkit-transition:$trans;
    transition:$trans;
}

// border-radius
@mixin border-radius($radius){
    border-radius:$radius;
}

// sprite
@mixin sprite($img, $sp_name){
    background-image: url(#{$img}?__sprite__#{$sp_name});
}

// base64
@mixin base64($img){
    background-image: url(#{$img}?__inline);
}

// border
@mixin border($direction: all, $size: 1px, $style: solid, $color: $BORDERCOLOR){
    border-top:$size $style $color;
    @else if $direction == right {
        border-right:$size $style $color;
    }
    @else if $direction == bottom {
        border-bottom:$size $style $color;
    }
    @else if $direction == left {
        border-left:$size $style $color;
    }
}

// transition
@mixin transform($transform...){
    -webkit-transform:$transform;
    -ms-transform:$transform;
    transform:$transform;
}

// animation
@mixin animation($animation...){
    -webkit-animation:$animation;
    animation:$animation;
}

// clearfix
%clearfix{
}

// clearfix
%clearfix:before, // clearfix
%clearfix:after {
    content:'';
    display:table;
    font:0/0 a;
}

// clearfix
%clearfix:after {
    clear:both;
}

// text-overflow
%text-overflow{
    overflow:hidden;
    white-space:nowrap;
    text-overflow:ellipsis;
    max-width:100%;
    word-wrap:normal;
}

// transition
%transition{
    -webkit-transition:all 0.3s ease;
    transition:all 0.3s ease;
}

// word break
%word-break{
    word-break:break-all;
    word-wrap:break-word;
    white-space: normal;
}

// hide text
%hide-text{
    font:0/0 a;
    color:transparent;
    text-shadow:none;
    background-color:transparent;
    border:0;
}

// no wrao
%no-wrap{
    white-space: nowrap;
    max-width:100%;
    overflow:hidden;
    word-wrap:normal;
}

// appearance
%appearance{
    -webkit-appearance:none;
    -moz-appearance:none;
         appearance:none;
}

// user select none
%user-select-none{
    -webkit-user-select:none;
    -moz-user-select:none;
     -ms-user-select:none;
         user-select:none;
}

// user select initial
%user-select-initial{
    -webkit-user-select:initial;
    -moz-user-select:initial;
     -ms-user-select:initial;
         user-select:initial;
}

// border-box
%border-box{
    box-sizing:border-box;
}

// inline-block top
%inline-block-top{
    display:inline-block;
    vertical-align: top;
}
